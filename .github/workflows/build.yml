name: Build Kivy APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Permite ejecuciÃ³n manual

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip openjdk-17-jdk autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev libxml2-dev libxslt-dev

    - name: Install Buildozer
      run: |
        pip install --upgrade Cython==0.29.36 virtualenv
        pip install buildozer==1.5.0

    - name: Configure Android NDK
      run: |
        wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip -q android-ndk-r25b-linux.zip
        mkdir -p ~/.buildozer/android/platform
        mv android-ndk-r25b ~/.buildozer/android/platform/
        echo "ANDROID_NDK_HOME=~/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV

    - name: Cache Buildozer dependencies
      uses: actions/cache@v4
      id: buildozer-cache
      with:
        path: |
          ~/.buildozer
          .buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}

    - name: Build APK
      run: |
        buildozer -v android debug
        if [ $? -ne 0 ]; then
          [ -f buildozer.log ] && tail -100 buildozer.log
          exit 1
        fi

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: iot-dashboard-apk
        path: bin/*.apk
        retention-days: 3
